---
name: ci

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"
  pull_request:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: 0 18 * * *

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false
      - uses: gradle/actions/wrapper-validation@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: Gr1N/setup-poetry@v8
      - run: poetry --version
      - uses: gradle/actions/setup-gradle@v4
      - name: set-up-jdk
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: check-java
        run: java --version

      - name: build-java
        run: ./gradlew ${{ env.GRADLE_SWITCHES }} build
      - name: build-python
        run: |
          for directory in rewrite/rewrite-*/; do
            if [ -f "$directory/pyproject.toml" ]; then
              echo "Building project in $directory"
              cd "$directory"
              poetry install --no-interaction --no-ansi
              poetry build
              poetry run pytest
              cd - > /dev/null
            fi
          done

      - name: publish-snapshots
        if: github.event_name != 'pull_request'
        run: ./gradlew ${{ env.GRADLE_SWITCHES }} snapshot publish -PforceSigning -x test
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
